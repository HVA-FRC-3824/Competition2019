// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3824.Competition2019.commands;
import edu.wpi.first.wpilibj.command.Command;

import org.usfirst.frc3824.Competition2019.Constants;
import org.usfirst.frc3824.Competition2019.Robot;

/**
 *
 */
public class ShooterPrepare extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public ShooterPrepare() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
        // WHEELS: true = top wheels, false = bottom wheels
        // SHOOTER TYPE: true = spaceship, false = cargoship
        // RAW BUTTONS: 7 = top, 19 = bottom, neither = middle
        if (Robot.shooter.getShooterType())
        {
            if (Robot.oi.board.getRawButton(7))
            {
                Robot.shooter.setWheelVelocity(Constants.SHOOTER_TOPWHEEL_SPACESHIP_TOP_RPM, true);
                Robot.shooter.setWheelVelocity(Constants.SHOOTER_BOTTOMWHEEL_SPACESHIP_TOP_RPM, false);
            }
                
            else if (Robot.oi.board.getRawButton(19))
            {
                Robot.shooter.setWheelVelocity(Constants.SHOOTER_TOPWHEEL_SPACESHIP_BOTTOM_RPM, true);
                Robot.shooter.setWheelVelocity(Constants.SHOOTER_BOTTOMWHEEL_SPACESHIP_BOTTOM_RPM, false);
            }
            else
            {
                Robot.shooter.setWheelVelocity(Constants.SHOOTER_TOPWHEEL_SPACESHIP_MIDDLE_RPM, true);
                Robot.shooter.setWheelVelocity(Constants.SHOOTER_BOTTOMWHEEL_SPACESHIP_MIDDLE_RPM, false);
            }
        }
        else
        {
            Robot.shooter.setWheelVelocity(Constants.SHOOTER_TOPWHEEL_CARGOSHIP_RPM, true);
            Robot.shooter.setWheelVelocity(Constants.SHOOTER_BOTTOMWHEEL_CARGOSHIP_RPM, false);
        }
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return true;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    }
}
